"""Commits quiz."""

# 1. Опишите своими словами назначение каждого из этих типов коммитов:
#
# * feat - добавление нового функционала в проект
# * fix - исправление багов и ошибок в проекте
# * docs - добавление/обновление документации проекта
# * style - внешнее изменение кода проекта
# * refactor - изменение кода без потери первоначальной архитектуры/идеи
# * test - изменение/добавление тестов в проект
# * build - изменения связанные со сборкой проекта/внешними зависимости
# * ci - изменение системы интеграций, например GitHub Actions
# * perf - улучшение производительности проекта, без изменений функциональности
# * chore - рутинные изменения, не попадающие под другие категории

# 2. Представьте, что вы исправили баг в функции, которая некорректно округляет числа. Сделайте фиктивный коммит и напишите для него сообщение в соответствии с Conventional Commits (используя тип fix).
#
# https://github.com/gorop51-2/Data-Science-For-Beginners-from-scratch-SENATOROV/commit/92705a24a2212eca2ea32cabcfc73416d5b525ed

# 3. Допустим, вы реализовали новую функцию generateReport в проекте. Сделайте фиктивный коммит с типом feat, отражающий добавление этой функциональности.
#
# https://github.com/gorop51-2/Data-Science-For-Beginners-from-scratch-SENATOROV/commit/395cc9c2e9cd2ddd838e8fe27159c4e73342950a

# 4. Представьте, что вы поправили отступы и форматирование во всём проекте, не меняя логики кода. Сделайте фиктивный коммит с типом style
#
# https://github.com/gorop51-2/Data-Science-For-Beginners-from-scratch-SENATOROV/commit/c8419c7357fe7ec7e2936d9da584c60d28f1ddb7
