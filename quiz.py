"""[TASK] Контрибьютинг в Open Source #8."""

# ## GitHub

# ### 1.1. Что такое GitHub?
#
# Это удаленное хранилище репозиториев git, необходимое для совместной работы множества разработчиков над едиными проектами.
#
# ### 1.2. Как GitHub связан с Git?
#
# GitHub хранит множества git-репозиториев пользователей.
#
# ### 1.3. Чем отличается fork репозитория от его клонирования (clone)?
#
# Форк репозитория - это копирование удаленного репозитория, с указанием на первоисточник, с целью доработки или изменения существующего кода.
#
# Клонирование - это создание локального репозитория, подобного клонируемому удаленному, для дальнейшего использования, предусмотренного автором репозитория.
#
# ### 1.4. Зачем нужны и как работают pull requests?
#
#  Это присоединение побочных веток или форков репозитория к основной ветке, например сторонний разработчик сделал форк и исправил баг, а затем отправил пул реквест в основную ветку, где его приняли и баг в основной ветке был устранен.
#
#  ### 1.5. GitHub использует ваш почтовый адрес для привязки ваших Git коммитов к вашей учётной записи?
#
#  Да, при отправки коммитов, гитхаб засчитывает их именно вам благодаря соответствию почт git и github.
#
#  ### 1.6 Какая команда генерирует SSH ключ для Доступа по SSH к репозиторию (Рисунок 83)
#
#  `ssh-keygen -o`
#
#
#

# ## Внесение собственного вклада в проекты

# 2.1. https://github.com/gorop51-2/Data-Science-For-Beginners-from-scratch-SENATOROV
#
# 2.2. https://github.com/gorop51-2/Data-Science-For-Beginners-from-scratch-SENATOROV/tree/dev
#
# 2.4. 385
#
# 2.6. https://github.com/gorop51-2/Data-Science-For-Beginners-from-scratch-SENATOROV/pull/1
#
# 2.7. https://github.com/SENATOROVAI/Data-Science-For-Beginners-from-scratch-SENATOROV/pulls?q=is%3Apr+is%3Aclosed
#
# 2.8. Необходимо перейти в историю коммитов своего репозитория, затем из списка выберите нужный и нажмите Browse repository at this point
#
# https://github.com/SENATOROVAI/Data-Science-For-Beginners-from-scratch-SENATOROV/tree/993e61f548d038a8f9395ee16b7b392952c8cf19
#
# 2.9. Для работы в разных ветках своего форка, чтобы в дальнейшем их объединить и отправить пул реквест в исходный репозиторий.

# ## Рабочий процесс с использованием GitHub

# ### 3. Напишите 8 пунктов, которые нужно сделать, чтобы внести вклад в чужой проект:
# - Сделать форк репозитория проекта, вклад в который хотите сделать
# - Клонируйте форк на свой компьютер с помощью GitHub Desktop или команды в консоли
# - Создайте issue в названии, которого укажите что собираетесь менять/исправлять
# - Откройте репозиторий в редакторе кода
# - Внесите свои правки
# - Сделайте коммит ссылаясь на issue, а затем и push, если у исходного проекта есть CONTRIBUTION.md следуйте ему.
# - Отправьте пул реквест в оригинальный проект, описывая какие изменения вы внесли, и ссылаясь на issue
# - Запросите ревью и дождитесь ответа владельца исходного проекта, исправьте ваш код при необходимости.
#
# ### 3.1
# - Какие практики принято соблюдать при создании Pull Request чтобы закрыть автоматический issues?
# В названии указывать название закрываемого issue, а в описании указывать `Closes #number_issue`.
#
# - Какие практики принято соблюдать при создании commit чтобы закрыть автоматический issues?
# В названии дополнительно указывать номер issue в круглых скобках `title (#number_issue)`, в описании указывать `Closes #number_issue`.
#
# ### 3.2 Как отклонить/закрыть пул реквест? (предоставьте скриншот где это в гитхабе)
#
# ![](img/question%203.2.jpg)
#
# ### 3.3 Перед отправкой пул реквеста нужно ли создавать ишьюс?
# Да.
#
# ### 3.4 В какой вкладке можно посмотреть список изменений который был в пул реквесте? (Рисунок 92)
# Вкладка Files changed.
#
# ### 3.5 В какой вкладке находится страница обсуждений пул реквеста? (Рисунок 94)
# Вкладка Conversation.

# ## Создание запроса на слияние

# ### 4. Можно ли открыть пул реквест, если вы ничего не вносили в FORK?
# Нет.
#
# ### 4.1. Что нужно сделать чтобы открыть пул реквест? (Рисунок 90)
# Внести изменения в проект, которые не содержат конфликтов.
#
# ### 4.2. Что нужно сделать Если ваш Форк устарел?
# Fork origin.
#
# ### 4.3. Что нужно сделать если в пул реквесте имеются конфликты слияния (Рисунок 96)
# Изменить свой код, так чтобы разрешить конфликт.
#
#

# ## Отрывки кода

# ### 5. Что нужно сделать Для добавления отрывка кода в комментарии к ишьюсу? (Рисунок 104)
# Для добавления отрывка кода следует обрамить его обратными кавычками.
#
# ### 5.1. На какую клавишу нажать клавишу чтобы выделенный текст был включён как цитата в ваш комментарий?(Рисунок 105)
# Клавишу r.
#
# ### 5.2. Как вставить картинку в ишьюс? (Рисунок 108)
# Перетащить картинку мышью, или скопировать и вставить.

# ## Поддержание GitHub репозитория в актуальном состоянии

# ### 6. Как понять что ваш форк устарел?
# Когда вы заходите в свой форк на GitHub, вверху страницы появится уведомление `This branch is X commits behind [оригинал]:main.`.
#
# ### 6.1. Как обновить форк?
# В интерфейсе GitHub Desktop нажать Fetch origin.

# ## Добавление участников

# ### 7. Как добавить участников в ваш репозиторий, чтобы команда могла работать над одним репозиторием? (Рисунок 112)
# Нажать на верхней панели Settings -> Collaborators -> Add people, введите логин пользователя и отправьте приглашение.

# ## Упоминания и уведомления

# ### 8. Какой символ нужен для упоминания кого-либо? (Рисунок 118)
# Символ @.
#
# ### 8.1. Где находится Центр уведомлений, напишите ссылку (Рисунок 121)
# https://github.com/notifications

# ## Особенные файлы

# ### 9. Что такое и зачем нужен файл README
# Это файл с описанием проекта и подробной инструкцией как его установить/использовать.
#
# ### 9.1. Что такое и зачем нужен файл CONTRIBUTING (Рисунок 122)
# Это файл который задает стандарт для людей желающих внести свой вклад в проект, то есть для стандартизации названий/описаний issue и pull request.

# ## Управление проектом

# ### 10. Как измененить основную ветку (Рисунок 123)
# В настройках репозитория на закладке «Options» выберите нужную ветку.
#
# ### 10.1. Как передать проект? какая кнопка? (рисунок 124)
# Необходимо отправить запрос на трансфер пользователю, которому вы собираетесь передать проект. Кнопка Transfer.
#
# ### 10.2. Что такое файл .gitignore?
# Это файл в котором указываются файлы и регулярные выражения, определяющие список файлов, которые не будут включены в репозиторий, например файлы кеша/зависимостей/сред программирования.

#
